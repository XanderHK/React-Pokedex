{"version":3,"sources":["api/api.ts","components/Type.tsx","components/PokemonCard.tsx","components/Searchbar.tsx","components/Stat.tsx","functions/functions.ts","components/Information.tsx","components/Pokemon.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["getAllPokemonNames","a","axios","get","response","data","results","map","item","pokemon","name","id","url","replace","slice","getPokemonDescription","urlExists","flavor_text_entries","find","entry","language","flavor_text","getNamesFromEvoChain","object","arr","undefined","species","push","evolves_to","flat","getSpriteFromPokemon","then","res","sprites","front_default","getEvolutionChain","evolution_chain","evolutionChain","baseEvolution","chain","evolutionNames","unshift","getPokemon","catch","error","console","log","formattedStats","stats","stat","statAmount","base_stat","statName","description","Type","parsedType","this","props","type","charAt","toUpperCase","substring","length","src","alt","height","width","React","Component","Card","event","target","types","Object","values","index","pokemonImage","createElement","className","imgSrc","onError","handleError","prevBtn","onClick","prev","icon","faArrowLeft","nextBtn","next","faArrowRight","style","position","zIndex","backgroundColor","background","Searchbar","getInput","input","value","toLowerCase","setState","matches","names","filter","e","includes","bind","setPokemon","state","number","parsePokemon","onInput","placeholder","match","Stat","string","amount","Information","toFixed","weight","evolutionSprites","Pokemon","fac","FastAverageColor","firstPokemon","pokemonNr","increment","parseInt","pokemonName","pokemonImageUrl","other","pokemonTypes","pokemonWeight","pokemonHeight","pokemonStats","pokemonDescription","pokemonEvolutionChain","pokemonEvolutionSprites","setBackground","setEvolutionSprites","getColorAsync","fullColor","pokemonBackground","hex","Set","add","Array","from","PokemonCard","bottom","right","color","href","rel","faGithub","size","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5433c7f3.chunk.js","sourcesContent":["import axios, { AxiosResponse } from 'axios';\r\nimport urlExists from 'url-exist'\r\n\r\n/**\r\n * Returns a list of all pokemon names\r\n * @returns {Promise<any>}\r\n */\r\nexport async function getAllPokemonNames(): Promise<any> {\r\n    const response: AxiosResponse<any> = await axios.get('https://pokeapi.co/api/v2/pokemon-species/?limit=20000');\r\n    return response.data.results.map((item: any) => {\r\n        const pokemon: { name: string, id: number } = { name: '', id: 0 };\r\n        pokemon.name = item.name;\r\n        pokemon.id = item.url.replace(\"https://pokeapi.co/api/v2/pokemon-species/\", \"\").slice(0, -1);\r\n        return pokemon;\r\n    })\r\n}\r\n\r\n/**\r\n * \r\n * @param url \r\n * @returns {Promise<any>}\r\n */\r\nasync function getPokemonDescription(url: string): Promise<any> {\r\n    const exists: boolean = await urlExists(url);\r\n    if (!exists) return;\r\n    const response: AxiosResponse<any> = await axios.get(url);\r\n    return response.data.flavor_text_entries.find((entry: any) => {\r\n        if (entry.language.name === \"en\") return entry;\r\n        return null;\r\n    }).flavor_text.replace(\"\\f\", \" \").replace(\"POKéMON\", \"Pokémon\");\r\n}\r\n\r\n/**\r\n * \r\n * @param object \r\n * @returns \r\n */\r\nfunction getNamesFromEvoChain(object: any): any {\r\n    const arr: any = [];\r\n    if (object !== undefined && object.species !== undefined && object.species.name !== undefined) {\r\n        arr.push(object.species.name);\r\n        if (object.evolves_to[0] !== undefined) {\r\n            arr.push(getNamesFromEvoChain(object.evolves_to[0]));\r\n        }\r\n        return arr.flat();\r\n    }\r\n    return false;\r\n}\r\n\r\n/**\r\n * \r\n * @param name \r\n * @returns \r\n */\r\nexport async function getSpriteFromPokemon(name: string): Promise<any> {\r\n    const url = `https://pokeapi.co/api/v2/pokemon/${name}`;\r\n    const exists: boolean = await urlExists(url);\r\n    if (!exists) return;\r\n    return axios.get(url).then(res => res.data.sprites.front_default)\r\n}\r\n\r\n/**\r\n * \r\n * @param url \r\n * @returns {Promise<any>}\r\n */\r\nexport async function getEvolutionChain(url: string): Promise<any> {\r\n    const exists: boolean = await urlExists(url);\r\n    if (!exists) return;\r\n    const evolutionChain: AxiosResponse<any> = await axios.get(url).then(async res => await axios.get(res.data.evolution_chain.url));\r\n    const baseEvolution: string = evolutionChain.data.chain.species.name;\r\n    const evolutionNames: string[] = getNamesFromEvoChain(evolutionChain.data.chain.evolves_to[0])\r\n    if (!evolutionNames) {\r\n        return [];\r\n    }\r\n    evolutionNames.unshift(baseEvolution)\r\n    return evolutionNames;\r\n}\r\n\r\n/**\r\n * \r\n * @param name \r\n */\r\nexport async function getPokemonByName(name: string) {\r\n    const url: string = `https://pokeapi.co/api/v2/pokemon/${name}`;\r\n    const exists: boolean = await urlExists(url);\r\n    if (!exists) return;\r\n    return await axios.get(url).then(async res => await res.data);\r\n}\r\n\r\n/**\r\n * \r\n * @param id \r\n * @returns {Promise<any>} \r\n */\r\nexport async function getPokemon(id: number): Promise<any> {\r\n    const url: string = `https://pokeapi.co/api/v2/pokemon/${id}`;\r\n    const exists: boolean = await urlExists(url);\r\n    if (!exists) return;\r\n    const response = await axios.get(url)\r\n        .then(res => {\r\n            return res.data\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        })\r\n    response.formattedStats = response.stats.map((stat: any) => {\r\n        return { statAmount: stat.base_stat, statName: stat.stat.name };\r\n    });\r\n    response.description = await getPokemonDescription(response.species.url);\r\n    response.evolutionChain = await getEvolutionChain(response.species.url);\r\n    return await response;\r\n}\r\n","import React from 'react'\r\n\r\ntype Props = {\r\n    type: string;\r\n    key: number;\r\n}\r\n\r\nclass Type extends React.Component<Props> {\r\n\r\n    public render() {\r\n        const parsedType: string = this.props.type.charAt(0).toUpperCase() + this.props.type.substring(1, this.props.type.length)\r\n        return (\r\n            <img src={`/types/${parsedType}.png`} alt=\"\" height=\"40\" width=\"40\" />\r\n        )\r\n    }\r\n}\r\n\r\nexport default Type;","import React from 'react'\r\nimport Type from './Type'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowRight } from '@fortawesome/free-solid-svg-icons'\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons'\r\nimport { fEmptyVoid } from '../types/types'\r\n\r\ntype Props = {\r\n    prev: fEmptyVoid;\r\n    next: fEmptyVoid;\r\n    imgSrc: string;\r\n    types: any;\r\n    background: string;\r\n}\r\n\r\n\r\nclass Card extends React.Component<Props> {\r\n\r\n    private handleError(event: any) {\r\n        event.target.src = \"placeholder.png\"\r\n    }\r\n\r\n    public render() {\r\n        const types: any = Object.values(this.props.types).map((type: any, index: number) => {\r\n            return <Type type={type.type.name} key={index} />\r\n        });\r\n        const pokemonImage = React.createElement('img', { id: 'pokemonImage', className: 'card-img-top', src: this.props.imgSrc, alt: 'no image available', onError: this.handleError });\r\n        const prevBtn = React.createElement('button', { onClick: this.props.prev, className: 'btn' }, <FontAwesomeIcon icon={faArrowLeft} />);\r\n        const nextBtn = React.createElement('button', { onClick: this.props.next, className: 'btn' }, <FontAwesomeIcon icon={faArrowRight} />);\r\n        return (\r\n            <div className=\"h-100 d-flex align-items-center justify-content-center\">\r\n                <div className=\"row align-self-center h-100\" style={{ position: 'relative', zIndex: 1 }}>\r\n                    <div className=\"col-sm-12 align-self-center\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-2 align-self-center\">\r\n                                {prevBtn}\r\n                            </div>\r\n                            <div className=\"col-sm-8\">\r\n                                <div className=\"d-flex align-items-center justify-content-center\">\r\n                                    <div className=\"card\" style={{ backgroundColor: this.props.background }}>\r\n                                        {pokemonImage}\r\n                                        <div className=\"card-body\">\r\n                                            <h5 className=\"card-title\">{types}</h5>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-sm-2 align-self-center\">\r\n                                {nextBtn}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Card;","import React from 'react'\r\nimport { getAllPokemonNames } from '../api/api'\r\nimport { fNumberEmptyPromise } from '../types/types';\r\n\r\ntype Props = {\r\n    parsePokemon: fNumberEmptyPromise;\r\n}\r\n\r\ntype State = {\r\n    matches: { name: string, id: number }[];\r\n}\r\n\r\nclass Searchbar extends React.Component<Props, State> {\r\n\r\n    public constructor(props: Props) {\r\n        super(props);\r\n        this.getInput.bind(this);\r\n        this.setPokemon.bind(this);\r\n        this.state = {\r\n            matches: []\r\n        }\r\n    }\r\n\r\n\r\n    private getInput = async (event: any) => {\r\n\r\n        const input: string = event.target.value.toLowerCase();\r\n\r\n        if (input.length === 0) {\r\n            this.setState({\r\n                matches: []\r\n            })\r\n            return;\r\n        };\r\n\r\n        const names = await getAllPokemonNames();\r\n\r\n        const matches: { name: string, id: number }[] = names.filter((e: any) => {\r\n            if (e.name.includes(input)) {\r\n                return e\r\n            }\r\n            return null\r\n        }).slice(0, 8);\r\n\r\n        this.setState({\r\n            matches: matches\r\n        });\r\n    }\r\n\r\n    public setPokemon(number: number) {\r\n        this.props.parsePokemon(number);\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"searchbar\">\r\n                <input type=\"text\" className=\"form-control\" onInput={this.getInput} placeholder=\"Search..\" />\r\n                <div className=\"searchbar-list\">\r\n                    {this.state.matches.map((match: { name: string, id: number }) => (\r\n                        <div key={match.id} className=\"searchbar-item\" onClick={() => this.setPokemon(match.id)}>\r\n                            {match.name}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Searchbar;","import React from 'react'\r\nimport { capitalizeString } from '../functions/functions'\r\n\r\ntype Props = {\r\n    amount: number;\r\n    name: string;\r\n}\r\n\r\nclass Stat extends React.Component<Props> {\r\n    public render() {\r\n        return <div className=\"col-sm-6 d-flex align-self-start\"><div className=\"p-3 border bg-light w-100\"><div>{capitalizeString(this.props.name.replace(\"-\", \" \"))}</div>{this.props.amount}</div></div >\r\n    }\r\n}\r\n\r\nexport default Stat;","export function capitalizeString(string: string) {\r\n    return string.charAt(0).toUpperCase() + string.substring(1, string.length);\r\n}","import React from 'react'\r\nimport Stat from './Stat'\r\n\r\ntype Props = {\r\n    weight: number;\r\n    height: number;\r\n    name: string;\r\n    stats: { statAmount: number, statName: string }[];\r\n    description: string;\r\n    id: number;\r\n    evolutionChain: string[];\r\n    evolutionSprites: string[];\r\n};\r\n\r\nclass Information extends React.Component<Props> {\r\n\r\n    public render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <h1>Pokémon Information</h1>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-12\">\r\n                        <h2 className=\"d-flex align-self-start\">{this.props.name.toUpperCase()} #{this.props.id}</h2>\r\n                        <p className=\"d-flex align-self-start\">{this.props.description}</p>\r\n                        <div>\r\n                            <h2 className=\"d-flex align-self-start\">Pokémon stats</h2>\r\n                            <div className=\"row g-2\">\r\n                                {this.props.stats.map((stat: { statAmount: number, statName: string }, index: number) => (\r\n                                    <Stat key={index} name={stat.statName} amount={stat.statAmount} />\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                        <h2 className=\"d-flex align-self-start\">Pokémon anthropometry</h2>\r\n                        <div className=\"row\">\r\n                            <div className=\"d-flex align-self-start col-sm-6\"><div className=\"p-3 border bg-light w-100\">Height {(this.props.height * 0.1).toFixed(2)}M</div></div>\r\n                            <div className=\"d-flex align-self-start col-sm-6\"><div className=\"p-3 border bg-light w-100\">Weight {(this.props.weight * 0.1).toFixed(2)}KG</div></div>\r\n                        </div>\r\n                        <div>\r\n                            <h2 className=\"d-flex align-self-start\">Pokémon evolutions</h2>\r\n                            {/* {this.props.evolutionChain.map((evo: string, index: number) => (\r\n                                <div className=\"d-flex align-self-start\" key={index}>{evo}</div>\r\n                            ))} */}\r\n                            {this.props.evolutionSprites.map((src: string, index: number) => (\r\n                                <img key={index} src={src} alt=\"\" />\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Information;","import React from 'react'\r\nimport { getPokemon, getSpriteFromPokemon } from '../api/api'\r\nimport PokemonCard from './PokemonCard'\r\nimport Searchbar from './Searchbar'\r\nimport FastAverageColor from 'fast-average-color';\r\nimport Information from './Information'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faGithub } from '@fortawesome/free-brands-svg-icons'\r\n\r\ntype Props = {\r\n\r\n}\r\n\r\ntype State = {\r\n    pokemonNr: number;\r\n    pokemonName: string;\r\n    pokemonImageUrl: string;\r\n    pokemonTypes: any;\r\n    pokemonBackground: string;\r\n    pokemonHeight: number;\r\n    pokemonWeight: number;\r\n    pokemonStats: { statAmount: number, statName: string }[];\r\n    pokemonDescription: string;\r\n    pokemonEvolutionChain: string[];\r\n    pokemonEvolutionSprites: string[];\r\n};\r\n\r\nclass Pokemon extends React.Component<Props, State> {\r\n\r\n    private fac: IFastAverageColor = new FastAverageColor();\r\n    private firstPokemon: number = 1;\r\n\r\n    public componentDidMount(): void {\r\n\r\n        this.parsePokemon(this.firstPokemon);\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    private prev = (): void => {\r\n\r\n        if (this.state.pokemonNr === 0) return;\r\n\r\n        this.parsePokemon(this.state.pokemonNr - 1);\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    private next = async (): Promise<void> => {\r\n\r\n        let increment = 1;\r\n        if (this.state.pokemonNr === 0) increment = 2;\r\n\r\n        this.parsePokemon(this.state.pokemonNr + increment);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param number \r\n     */\r\n    private parsePokemon = async (number: number): Promise<void> => {\r\n\r\n        if (typeof number === 'string') {\r\n            number = parseInt(number, 10)\r\n        }\r\n        const pokemon = await getPokemon(number);\r\n\r\n        this.setState({\r\n            pokemonNr: number,\r\n            pokemonName: pokemon.name,\r\n            pokemonImageUrl: pokemon.sprites.other['official-artwork'].front_default,\r\n            pokemonTypes: pokemon.types,\r\n            pokemonWeight: pokemon.weight,\r\n            pokemonHeight: pokemon.height,\r\n            pokemonStats: pokemon.formattedStats,\r\n            pokemonDescription: pokemon.description,\r\n            pokemonEvolutionChain: pokemon.evolutionChain,\r\n            pokemonEvolutionSprites: []\r\n        });\r\n\r\n\r\n        await this.setBackground();\r\n        await this.setEvolutionSprites();\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    public setBackground = async () => {\r\n        const fullColor = await this.fac.getColorAsync(this.state.pokemonImageUrl);\r\n        this.setState({\r\n            pokemonBackground: fullColor.hex\r\n        })\r\n    }\r\n\r\n    public setEvolutionSprites = async () => {\r\n        const sprites: Set<string> = new Set();\r\n        for (const pokemonName of this.state.pokemonEvolutionChain) {\r\n            const response: string = await getSpriteFromPokemon(pokemonName);\r\n            sprites.add(response);\r\n        }\r\n        this.setState({\r\n            pokemonEvolutionSprites: Array.from(sprites) as string[]\r\n        });\r\n    }\r\n\r\n    public render() {\r\n        if (this.state === null) return <div />;\r\n        return (\r\n            <div className=\"container-fluid vh-100\">\r\n                <div className=\"row h-100\">\r\n                    <div className=\"col-sm-6\" style={{ backgroundColor: this.state.pokemonBackground }}>\r\n                        <div className=\"row\" style={{ position: 'relative', zIndex: 2 }}>\r\n                            <div className=\"col-sm-3\">\r\n                                <Searchbar parsePokemon={this.parsePokemon} />\r\n                            </div>\r\n                        </div>\r\n                        <PokemonCard\r\n                            prev={this.prev}\r\n                            next={this.next}\r\n                            imgSrc={this.state.pokemonImageUrl}\r\n                            types={this.state.pokemonTypes}\r\n                            background={this.state.pokemonBackground}\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-sm-6\">\r\n                        <Information\r\n                            id={this.state.pokemonNr}\r\n                            height={this.state.pokemonHeight}\r\n                            weight={this.state.pokemonWeight}\r\n                            name={this.state.pokemonName}\r\n                            stats={this.state.pokemonStats}\r\n                            description={this.state.pokemonDescription}\r\n                            evolutionChain={this.state.pokemonEvolutionChain}\r\n                            evolutionSprites={this.state.pokemonEvolutionSprites}\r\n                        />\r\n                        <div className=\"align-self-center\" style={{ bottom: 0, position: 'absolute', right: 0 }}>\r\n                            <a style={{ color: 'inherit' }} href=\"https://github.com/XanderHK\" target=\"_blank\" rel=\"noreferrer\"><FontAwesomeIcon icon={faGithub} size=\"2x\" /></a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Pokemon;","import React from 'react';\nimport './App.css';\nimport Pokemon from './components/Pokemon';\n\nclass App extends React.Component {\n\tpublic render() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<Pokemon />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}